{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\33698\\\\Desktop\\\\Web\\\\5-PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\stories\\\\1-Button.stories.js\";\nimport React from 'react';\nimport './Style.css';\nimport data_Histo from './StoryBookHistoData'; // Histogramme\n\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts'; // Histogramme\n\nimport data_Courbes from './Story_Book_Data_Courbes';\nimport { // Courbes\nLineChart, Line } from 'recharts'; // Courbes\n\nimport { PieChart, Pie, Sector, Cell } from 'recharts';\nimport data_Camembert from './Data_Camembert'; // Camembert\n\nexport default {\n  title: 'Widgets'\n};\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return React.createElement(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n}; // Pour le Camembert \n\n\nexport const Histogramme = () => React.createElement(\"div\", {\n  className: \"widget-Histogramme\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"Nombres de Visites m\\xE9dicales cette ann\\xE9e \"), React.createElement(BarChart, {\n  width: 500,\n  height: 300,\n  data: data_Histo,\n  margin: {\n    top: 5,\n    right: 30,\n    left: 20,\n    bottom: 5\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(CartesianGrid, {\n  strokeDasharray: \"3 3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), React.createElement(XAxis, {\n  dataKey: \"name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), React.createElement(YAxis, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}), React.createElement(Tooltip, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), React.createElement(Legend, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), React.createElement(Bar, {\n  dataKey: \"Visites_m\\xE9dicale\",\n  fill: \"#8884d8\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n})));\nexport const Nbre_de_pas = () => React.createElement(\"div\", {\n  className: \"Nbres_de_pas\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, \"Nombres de Pas aujourd'hui\"), React.createElement(\"div\", {\n  className: \"today\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}, React.createElement(\"h5\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, \"6000\")), React.createElement(\"div\", {\n  className: \"hier\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, React.createElement(\"h6\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"Hier : 4000\")), React.createElement(\"div\", {\n  className: \"moyenne\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(\"h6\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \"Avg semaine : 3457\")));\nexport const Courbes = () => React.createElement(\"div\", {\n  className: \"widget-Courbes\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, \"Temps de Sommeil en heure\"), React.createElement(LineChart, {\n  width: 650,\n  height: 350,\n  data: data_Courbes,\n  margin: {\n    top: 5,\n    right: 30,\n    left: 1,\n    bottom: 5\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, React.createElement(CartesianGrid, {\n  strokeDasharray: \"2 2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}), React.createElement(XAxis, {\n  dataKey: \"name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}), React.createElement(YAxis, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}), React.createElement(Tooltip, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), React.createElement(Legend, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}), React.createElement(Line, {\n  type: \"monotone\",\n  dataKey: \"Semaine_Pr\\xE9cedente\",\n  stroke: \"#8884d8\",\n  activeDot: {\n    r: 8\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}), React.createElement(Line, {\n  type: \"monotone\",\n  dataKey: \"Semaine_Actuelle\",\n  stroke: \"#82ca9d\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n})));\nexport const Camembert = () => React.createElement(\"div\", {\n  className: \"widget-Camembert\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, \"Consommation Alimentaire ce mois-ci\"), React.createElement(\"div\", {\n  className: \"legende\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, \"Bleu : Viande\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}), \"Orange : L\\xE9gumes\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}), \"Vert : Poisson\", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}), \"Jaune : Sodas\"), React.createElement(PieChart, {\n  width: 400,\n  height: 500,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, React.createElement(Pie, {\n  data: data_Camembert,\n  cx: 235,\n  cy: 115,\n  labelLine: false,\n  label: renderCustomizedLabel,\n  outerRadius: 115,\n  fill: \"#8884d8\",\n  dataKey: \"value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, data_Camembert.map((entry, index) => React.createElement(Cell, {\n  key: \"cell-\".concat(index),\n  fill: COLORS[index % COLORS.length],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n})))));","map":{"version":3,"sources":["C:/Users/33698/Desktop/Web/5-PROJECT_WEB_OCRES/frontend/src/stories/1-Button.stories.js"],"names":["React","data_Histo","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","data_Courbes","LineChart","Line","PieChart","Pie","Sector","Cell","data_Camembert","title","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","Histogramme","top","right","left","bottom","Nbre_de_pas","Courbes","r","Camembert","map","entry","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Style.css';\r\nimport data_Histo from './StoryBookHistoData' // Histogramme\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts'; // Histogramme\r\n\r\n\r\nimport data_Courbes from './Story_Book_Data_Courbes'\r\nimport  // Courbes\r\n{ LineChart, Line} \r\nfrom 'recharts'; // Courbes\r\n\r\nimport {\r\n  PieChart, Pie, Sector, Cell,\r\n} from 'recharts';\r\nimport data_Camembert from './Data_Camembert' // Camembert\r\n\r\n\r\nexport default {\r\n  title: 'Widgets',\r\n};\r\n\r\n\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n}) => {\r\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n}; // Pour le Camembert \r\n\r\n\r\n\r\nexport const Histogramme = () => (\r\n<div className=\"widget-Histogramme\">\r\n    <div className=\"title\">Nombres de Visites médicales cette année </div>\r\n      <BarChart\r\n        width={500}\r\n        height={300}\r\n        data={data_Histo}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"Visites_médicale\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n</div>\r\n);\r\nexport const Nbre_de_pas = () => (\r\n<div className=\"Nbres_de_pas\">\r\n              <h1>Nombres de Pas aujourd'hui</h1>\r\n              <div className=\"today\">\r\n                <h5>6000</h5>\r\n              </div>\r\n              <div className=\"hier\">\r\n                <h6>Hier : 4000</h6>\r\n              </div>\r\n              <div className=\"moyenne\">\r\n                <h6>Avg semaine : 3457</h6>\r\n              </div>\r\n</div>\r\n);\r\nexport const Courbes = () =>(\r\n  <div className=\"widget-Courbes\">\r\n    <div className=\"title\">Temps de Sommeil en heure</div>\r\n            <LineChart\r\n                width={650}\r\n                height={350}\r\n                data={data_Courbes}\r\n                margin={{ top: 5, right: 30, left: 1, bottom: 5,}}>\r\n                <CartesianGrid strokeDasharray=\"2 2\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Semaine_Précedente\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                <Line type=\"monotone\" dataKey=\"Semaine_Actuelle\" stroke=\"#82ca9d\" />\r\n            </LineChart>\r\n</div>\r\n);\r\nexport const Camembert = () =>(\r\n<div className=\"widget-Camembert\">\r\n    <div className=\"title\">Consommation Alimentaire ce mois-ci</div>\r\n      <div className=\"legende\">Bleu : Viande<br/>Orange : Légumes<br/>Vert : Poisson<br/>Jaune : Sodas</div>                        \r\n        <PieChart width={400} height={500}>\r\n          <Pie\r\n            data={data_Camembert}\r\n            cx={235}\r\n            cy={115}\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={115}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {\r\n              data_Camembert.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n            }\r\n          </Pie>\r\n        </PieChart>\r\n</div>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}